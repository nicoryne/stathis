name: Monorepo CI

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '21'
  ANDROID_API_LEVEL: 30
  ANDROID_BUILD_TOOLS: '34.0.0'

jobs:
  web-build:
    name: Web Dashboard
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/stathis-web
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # No npm cache because no lockfile exists in web/stathis-web

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Format & Type Check (no ESLint)
        run: |
          npx prettier --check .
          npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web/stathis-web/.next/
          retention-days: 1

  mobile-build:
    name: Mobile App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile/stathis-mobile
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build & Lint
        run: |
          chmod +x ./gradlew
          ./gradlew lint assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: mobile-apk
          path: mobile/stathis-mobile/app/build/outputs/apk/debug/
          retention-days: 1

  backend-build:
    name: Backend API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/stathis
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build (mvnw)
        working-directory: backend/stathis
        run: |
          chmod +x mvnw || true
          ./mvnw -q -B clean package -DskipTests

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/stathis/target/*.jar
          retention-days: 1

  status-check:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [web-build, mobile-build, backend-build]
    if: always()
    steps:
      - name: Check results
        run: |
          results=("${{ needs.web-build.result }}" "${{ needs.mobile-build.result }}" "${{ needs.backend-build.result }}")
          for result in "${results[@]}"; do
            if [[ "$result" != "success" ]]; then
              echo "❌ Build failed: $result"
              exit 1
            fi
          done
          echo "✅ All builds passed!"